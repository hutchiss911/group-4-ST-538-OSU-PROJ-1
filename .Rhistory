if (!require(ISLR2)) {
install.packages("ISLR2")
}
if (!require(leaps)) {
install.packages("leaps")
}
#Load libraries
library(tidycensus)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(faraway)
library(car)
library(gridExtra)
library(glmnet)
library(ISLR2)
library(leaps)
census_api_key("2547c95ce33b1ed0eec3aafd0fd8526a5bb9a22e")
#Pull data set for specific variables
puma_data <- get_pums(variables = c("AGEP","SCHL","PINCP", "SEX", "RAC1P", "TEN", "OCCP", "MAR", "ACR")
,state = "OR"
,year = 2022)
#Pull data set for specific variables
puma_data <- get_pums(variables = c("AGEP","SCHL","PINCP", "SEX", "RAC1P", "TEN", "OCCP", "MAR", "ACR")
,state = "OR"
,year = 2022)
#Rename the columns
puma_data <- puma_data %>% dplyr::rename(Age = AGEP,
EducationLevel = SCHL,
Income = PINCP,
Sex = SEX,
PersonNumber = SPORDER,
Race = RAC1P,
Homeownership = TEN,
Occupation = OCCP,
MaritalStatus = MAR,
HouseAcreage = ACR
)
head(puma_data[, 2:8])
#Remove columns that are not needed
puma_data <- puma_data %>%
select(-ST, -SERIALNO, -WGTP, -PWGTP)
head(puma_data)
#Convert education levels
puma_data <- puma_data %>%
mutate(
EducationLevel = case_when(
EducationLevel == "bb" ~ "00",
TRUE ~ EducationLevel
),
EducationLevel = as.numeric(EducationLevel)
)
#Make sure it is numeric
class(puma_data$EducationLevel)
#Convert Occupation to numerical
puma_data <- puma_data %>%
mutate(
Occupation = case_when(
Occupation == "bbbb" ~ "0000",
Occupation == "000N" ~ "0000",
TRUE ~ Occupation
),
Occupation = as.numeric(Occupation)
)
#Make sure it is numeric
class(puma_data$Occupation)
#Convert homeownership
puma_data <- puma_data %>%
mutate(
Homeownership = case_when(
Homeownership == "b" ~ "0",
TRUE ~ Homeownership
),
Homeownership = as.numeric(Homeownership)
)
#Make sure it is numeric
class(puma_data$Homeownership)
#Convert HouseAcreage
puma_data <- puma_data %>%
mutate(
HouseAcreage = case_when(
HouseAcreage == "b" ~ "0",
TRUE ~ HouseAcreage
),
HouseAcreage = as.numeric(HouseAcreage)
)
#Make sure it is numeric
class(puma_data$HouseAcreage)
##Group education level
puma_data <- puma_data %>%
mutate(
EducationGroup = cut(EducationLevel, breaks = c(0, 16, 21, 22, Inf),
labels = c("Less than HS", "HS, GED, or Associates Degree",
"Bachelors Degree", "Masters Degree or higher"),
right = FALSE)
)
unique(puma_data$EducationGroup)
puma_data[1:50,]
#Drop age below 14
puma_data <- puma_data %>%
filter(Age >= 14)
head(puma_data[puma_data$Age < 14,])
#Drop income that are less than 1 from the data set
#Drop observation with 0 and negative income
puma_data <- puma_data %>% filter(Income >= 1)
head(puma_data)
sum(puma_data$Income<1)
#relabeling race
puma_data <- puma_data %>%
mutate(
Race = case_when(
Race == "1" ~ "White",
Race == "2" ~ "Black or African American",
Race == "3" ~ "American Indian",
Race == "4" ~ "Alaska Native",
Race == "5" ~ "Native American Not Specified",
Race == "6" ~ "Asian",
Race == "7" ~ "Native Hawaiian or Other Pacific Islander",
Race == "8" ~ "Other Race",
Race == "9" ~ "Two or More Races",
TRUE ~ as.character(Race)
)
)
puma_data$Race[1:100]
#relabeling MaritalStatus
puma_data <- puma_data %>%
mutate(
MaritalStatus = case_when(
MaritalStatus == "1" ~ "Married",
MaritalStatus == "2" ~ "Widowed",
MaritalStatus == "3" ~ "Divorced",
MaritalStatus == "4" ~ "Separated",
MaritalStatus == "5" ~ "Not Married/Under 15",
TRUE ~ as.character(MaritalStatus)
)
)
#Checking labels are assigned.
unique(puma_data$MaritalStatus)
puma_data$MaritalStatus[11200:11300]
#relabeling Acreage
puma_data <- puma_data %>%
mutate(
HouseAcreage = case_when(
HouseAcreage == 0 ~ "Not a one-family home",
HouseAcreage == 1 ~ "< 1 Acre",
HouseAcreage == 2 ~ "1 - 10 Acres",
HouseAcreage == 3 ~ "> 10 Acres",
TRUE ~ as.character(HouseAcreage)
)
)
#Checking labels are assigned.
unique(puma_data$HouseAcreage)
puma_data$HouseAcreage[1200:1300]
puma_data$HouseAcreage[1500:1600]
#relabeling tenure
puma_data <- puma_data %>%
mutate(
Homeownership = case_when(
Homeownership == 0 ~ "N/A",
Homeownership == 1 ~ "Owned with mortgage or loan",
Homeownership == 2 ~ "Owned free and clear",
Homeownership == 3 ~ "Rented",
Homeownership == 4 ~ "Occupied without payment of rent",
TRUE ~ as.character(Homeownership)
)
)
#Checking labels are assigned.
unique(puma_data$Homeownership)
puma_data$Homeownership[11200:11300]
#Identify gender
puma_data <- puma_data %>%
mutate(
Sex = case_when(
Sex == 1 ~ "Male",
Sex == 2 ~ "Female",
TRUE ~ as.character(Sex)
)
)
#Checking labels are assigned.
unique(puma_data$Sex)
head(puma_data$Sex)
#Occupation Grouping
puma_data <- puma_data %>%
filter(as.numeric(Occupation) >= 0010) %>%
mutate(
OccupationGroup = case_when(
between(as.numeric(Occupation), 0010, 3550) ~ "Professional/Technical",
between(as.numeric(Occupation), 3600, 4160) ~ "Healthcare/FoodServices",
between(as.numeric(Occupation), 4200, 7640) ~ "WhiteCollar/BlueCollar",
between(as.numeric(Occupation), 7700, 9760) ~ "Manufacturing/Transportation",
between(as.numeric(Occupation), 9800, 9830) ~ "Military",
TRUE ~ "Not Classified"
)
)
#Checking labels are assigned.
unique(puma_data$OccupationGroup)
head(puma_data$OccupationGroup)
puma_data$Occupation[puma_data$OccupationGroup == "Not Classified",]
puma_data$Occupation[puma_data$OccupationGroup == "Not Classified"]
#Occupation Grouping
puma_data <- puma_data %>%
filter(as.numeric(Occupation) >= 0010 | as.numeric(Occupation) < 9920) %>%
mutate(
OccupationGroup = case_when(
between(as.numeric(Occupation), 0010, 3550) ~ "Professional/Technical",
between(as.numeric(Occupation), 3600, 4160) ~ "Healthcare/FoodServices",
between(as.numeric(Occupation), 4200, 7640) ~ "WhiteCollar/BlueCollar",
between(as.numeric(Occupation), 7700, 9760) ~ "Manufacturing/Transportation",
between(as.numeric(Occupation), 9800, 9830) ~ "Military",
TRUE ~ "Not Classified"
)
)
#Pull data set for specific variables
puma_data <- get_pums(variables = c("AGEP","SCHL","PINCP", "SEX", "RAC1P", "TEN", "OCCP", "MAR", "ACR")
,state = "OR"
,year = 2022)
#Rename the columns
puma_data <- puma_data %>% dplyr::rename(Age = AGEP,
EducationLevel = SCHL,
Income = PINCP,
Sex = SEX,
PersonNumber = SPORDER,
Race = RAC1P,
Homeownership = TEN,
Occupation = OCCP,
MaritalStatus = MAR,
HouseAcreage = ACR
)
head(puma_data[, 2:8])
#Remove columns that are not needed
puma_data <- puma_data %>%
select(-ST, -SERIALNO, -WGTP, -PWGTP)
head(puma_data)
#Convert education levels
puma_data <- puma_data %>%
mutate(
EducationLevel = case_when(
EducationLevel == "bb" ~ "00",
TRUE ~ EducationLevel
),
EducationLevel = as.numeric(EducationLevel)
)
#Make sure it is numeric
class(puma_data$EducationLevel)
#Convert Occupation to numerical
puma_data <- puma_data %>%
mutate(
Occupation = case_when(
Occupation == "bbbb" ~ "0000",
Occupation == "000N" ~ "0000",
TRUE ~ Occupation
),
Occupation = as.numeric(Occupation)
)
#Make sure it is numeric
class(puma_data$Occupation)
#Convert homeownership
puma_data <- puma_data %>%
mutate(
Homeownership = case_when(
Homeownership == "b" ~ "0",
TRUE ~ Homeownership
),
Homeownership = as.numeric(Homeownership)
)
#Make sure it is numeric
class(puma_data$Homeownership)
#Convert HouseAcreage
puma_data <- puma_data %>%
mutate(
HouseAcreage = case_when(
HouseAcreage == "b" ~ "0",
TRUE ~ HouseAcreage
),
HouseAcreage = as.numeric(HouseAcreage)
)
#Make sure it is numeric
class(puma_data$HouseAcreage)
##Group education level
puma_data <- puma_data %>%
mutate(
EducationGroup = cut(EducationLevel, breaks = c(0, 16, 21, 22, Inf),
labels = c("Less than HS", "HS, GED, or Associates Degree",
"Bachelors Degree", "Masters Degree or higher"),
right = FALSE)
)
unique(puma_data$EducationGroup)
puma_data[1:50,]
#Drop age below 14
puma_data <- puma_data %>%
filter(Age >= 14)
head(puma_data[puma_data$Age < 14,])
#Drop income that are less than 1 from the data set
#Drop observation with 0 and negative income
puma_data <- puma_data %>% filter(Income >= 1)
head(puma_data)
sum(puma_data$Income<1)
#relabeling race
puma_data <- puma_data %>%
mutate(
Race = case_when(
Race == "1" ~ "White",
Race == "2" ~ "Black or African American",
Race == "3" ~ "American Indian",
Race == "4" ~ "Alaska Native",
Race == "5" ~ "Native American Not Specified",
Race == "6" ~ "Asian",
Race == "7" ~ "Native Hawaiian or Other Pacific Islander",
Race == "8" ~ "Other Race",
Race == "9" ~ "Two or More Races",
TRUE ~ as.character(Race)
)
)
puma_data$Race[1:100]
#relabeling MaritalStatus
puma_data <- puma_data %>%
mutate(
MaritalStatus = case_when(
MaritalStatus == "1" ~ "Married",
MaritalStatus == "2" ~ "Widowed",
MaritalStatus == "3" ~ "Divorced",
MaritalStatus == "4" ~ "Separated",
MaritalStatus == "5" ~ "Not Married/Under 15",
TRUE ~ as.character(MaritalStatus)
)
)
#Checking labels are assigned.
unique(puma_data$MaritalStatus)
puma_data$MaritalStatus[11200:11300]
#relabeling Acreage
puma_data <- puma_data %>%
mutate(
HouseAcreage = case_when(
HouseAcreage == 0 ~ "Not a one-family home",
HouseAcreage == 1 ~ "< 1 Acre",
HouseAcreage == 2 ~ "1 - 10 Acres",
HouseAcreage == 3 ~ "> 10 Acres",
TRUE ~ as.character(HouseAcreage)
)
)
#Checking labels are assigned.
unique(puma_data$HouseAcreage)
puma_data$HouseAcreage[1500:1600]
#relabeling tenure
puma_data <- puma_data %>%
mutate(
Homeownership = case_when(
Homeownership == 0 ~ "N/A",
Homeownership == 1 ~ "Owned with mortgage or loan",
Homeownership == 2 ~ "Owned free and clear",
Homeownership == 3 ~ "Rented",
Homeownership == 4 ~ "Occupied without payment of rent",
TRUE ~ as.character(Homeownership)
)
)
#Checking labels are assigned.
unique(puma_data$Homeownership)
puma_data$Homeownership[11200:11300]
#Identify gender
puma_data <- puma_data %>%
mutate(
Sex = case_when(
Sex == 1 ~ "Male",
Sex == 2 ~ "Female",
TRUE ~ as.character(Sex)
)
)
#Checking labels are assigned.
unique(puma_data$Sex)
head(puma_data$Sex)
#Occupation Grouping
puma_data <- puma_data %>%
filter(as.numeric(Occupation) >= 0010 & as.numeric(Occupation) < 9920) %>%
mutate(
OccupationGroup = case_when(
between(as.numeric(Occupation), 0010, 3550) ~ "Professional/Technical",
between(as.numeric(Occupation), 3600, 4160) ~ "Healthcare/FoodServices",
between(as.numeric(Occupation), 4200, 7640) ~ "WhiteCollar/BlueCollar",
between(as.numeric(Occupation), 7700, 9760) ~ "Manufacturing/Transportation",
between(as.numeric(Occupation), 9800, 9830) ~ "Military",
TRUE ~ "Not Classified"
)
)
#Checking labels are assigned.
unique(puma_data$OccupationGroup)
head(puma_data$OccupationGroup)
puma_data$Occupation[puma_data$OccupationGroup == "Not Classified"]
puma_data$OccupationGroup[1520:1620]
puma_data$OccupationGroup[1820:1920]
puma_data$OccupationGroup[2020:2020]
puma_data$OccupationGroup[2020:2120]
puma_data$Occupation[puma_data$OccupationGroup == "Military"]
#Occupation Grouping
puma_data <- puma_data %>%
filter(as.numeric(Occupation) >= 0010 & as.numeric(Occupation) < 9920) %>%
mutate(
OccupationGroup = case_when(
between(as.numeric(Occupation), 0010, 3550) ~ "Professional/Technical",
between(as.numeric(Occupation), 3600, 4160) ~ "Healthcare/FoodServices",
between(as.numeric(Occupation), 4200, 7640) ~ "WhiteCollar/BlueCollar",
between(as.numeric(Occupation), 7700, 9760) ~ "Manufacturing/Transportation",
between(as.numeric(Occupation), 9800, 9830) ~ "Military",
TRUE ~ "Not Classified"
)
)
#Checking labels are assigned.
unique(puma_data$OccupationGroup)
puma_data$OccupationGroup[2020:2120]
puma_data$Occupation[puma_data$OccupationGroup == "Not Classified"]
#Pull data set for specific variables
puma_data <- get_pums(variables = c("AGEP","SCHL","PINCP", "SEX", "RAC1P", "TEN", "OCCP", "MAR", "ACR")
,state = "OR"
,year = 2022)
#Rename the columns
puma_data <- puma_data %>% dplyr::rename(Age = AGEP,
EducationLevel = SCHL,
Income = PINCP,
Sex = SEX,
PersonNumber = SPORDER,
Race = RAC1P,
Homeownership = TEN,
Occupation = OCCP,
MaritalStatus = MAR,
HouseAcreage = ACR
)
head(puma_data[, 2:8])
#Remove columns that are not needed
puma_data <- puma_data %>%
select(-ST, -SERIALNO, -WGTP, -PWGTP)
head(puma_data)
#Convert education levels
puma_data <- puma_data %>%
mutate(
EducationLevel = case_when(
EducationLevel == "bb" ~ "00",
TRUE ~ EducationLevel
),
EducationLevel = as.numeric(EducationLevel)
)
#Make sure it is numeric
class(puma_data$EducationLevel)
#Convert Occupation to numerical
puma_data <- puma_data %>%
mutate(
Occupation = case_when(
Occupation == "bbbb" ~ "0000",
Occupation == "000N" ~ "0000",
TRUE ~ Occupation
),
Occupation = as.numeric(Occupation)
)
#Make sure it is numeric
class(puma_data$Occupation)
#Convert homeownership
puma_data <- puma_data %>%
mutate(
Homeownership = case_when(
Homeownership == "b" ~ "0",
TRUE ~ Homeownership
),
Homeownership = as.numeric(Homeownership)
)
#Make sure it is numeric
class(puma_data$Homeownership)
#Convert HouseAcreage
puma_data <- puma_data %>%
mutate(
HouseAcreage = case_when(
HouseAcreage == "b" ~ "0",
TRUE ~ HouseAcreage
),
HouseAcreage = as.numeric(HouseAcreage)
)
#Make sure it is numeric
class(puma_data$HouseAcreage)
##Group education level
puma_data <- puma_data %>%
mutate(
EducationGroup = cut(EducationLevel, breaks = c(0, 16, 21, 22, Inf),
labels = c("Less than HS", "HS, GED, or Associates Degree",
"Bachelors Degree", "Masters Degree or higher"),
right = FALSE)
)
unique(puma_data$EducationGroup)
puma_data[1:50,]
#Drop age below 14
puma_data <- puma_data %>%
filter(Age >= 14)
head(puma_data[puma_data$Age < 14,])
#Drop income that are less than 1 from the data set
#Drop observation with 0 and negative income
puma_data <- puma_data %>% filter(Income >= 1)
head(puma_data)
sum(puma_data$Income<1)
#relabeling race
puma_data$Race <- as.numeric(Race)
#relabeling race
puma_data$Race <- as.numeric(puma_dataRace)
#relabeling race
puma_data$Race <- as.numeric(puma_data$Race)
puma_data <- puma_data %>%
mutate(
Race = case_when(
Race == 1 ~ "White",
Race == 2 ~ "Black/AfricanAmerican",
between(as.numeric(Race), 3, 6) ~ "NativeAmerican/Alaskan",
between(as.numeric(Race), 6, 7) ~ "Asian/PacificIslander",
between(as.numeric(Race), 8, 9) ~ "Other/MoreThanOne",
TRUE ~ as.character(Race)
)
)
puma_data$Race[1:100]
